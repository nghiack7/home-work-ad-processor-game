# Multi-stage build for Ad Processor Service
FROM golang:1.23-alpine AS builder

# Set environment variables
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64

# Install git for dependencies
RUN apk add --no-cache git ca-certificates

# Set work directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download && go mod verify

# Copy source code
COPY . .

# Build the application
RUN go build -ldflags="-w -s" -o bin/ad-processor ./cmd/ad-processor

# Production stage
FROM alpine:latest

# Install ca-certificates and tzdata
RUN apk --no-cache add ca-certificates tzdata curl

# Create non-root user
RUN addgroup -g 1002 -S adprocessor && \
    adduser -u 1002 -S adprocessor -G adprocessor

# Set work directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/bin/ad-processor .

# Copy configuration files
COPY --from=builder /app/configs ./configs

# Change ownership
RUN chown -R adprocessor:adprocessor /app

# Switch to non-root user
USER adprocessor

# Health check (simple process check)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD pgrep -f ad-processor || exit 1

# Expose metrics port (if any)
EXPOSE 9091

# Run the application
CMD ["./ad-processor"]