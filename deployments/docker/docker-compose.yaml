version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ad-processing-postgres
    environment:
      POSTGRES_DB: adprocessing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "15432:5432"  # Custom port mapping
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ad-processing

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ad-processing-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "16379:6379"  # Custom port mapping
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - ad-processing

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ad-processing-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ad-processing

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ad-processing-kafka
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"  # Custom port mapping
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - ad-processing

  # Ad API Service
  ad-api:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile.ad-api
    container_name: ad-processing-api
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - "31001:7001"  # Custom port mapping (external:internal)
      - "31091:7091"  # Metrics port
    environment:
      - APP_ENVIRONMENT=development
      - APP_DATABASE_HOST=postgres
      - APP_DATABASE_PORT=5432
      - APP_DATABASE_PASSWORD=${DB_PASSWORD:-postgres}
      - APP_REDIS_HOST=redis
      - APP_REDIS_PORT=6379
      - APP_REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
      - APP_KAFKA_BROKERS=kafka:19092
      - APP_SERVER_PORT=7001
    volumes:
      - ../../configs:/configs:ro
    healthcheck:
      test: ["CMD", "/ad-api", "-health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ad-processing

  # Ad Processor Service
  ad-processor:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile.ad-processor
    container_name: ad-processing-worker
    depends_on:
      - postgres
      - redis
      - kafka
      - ad-api
    environment:
      - APP_ENVIRONMENT=development
      - APP_DATABASE_HOST=postgres
      - APP_DATABASE_PORT=5432
      - APP_DATABASE_PASSWORD=${DB_PASSWORD:-postgres}
      - APP_REDIS_HOST=redis
      - APP_REDIS_PORT=6379
      - APP_REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
      - APP_KAFKA_BROKERS=kafka:19092
      - APP_QUEUE_WORKER_COUNT=3
    volumes:
      - ../../configs:/configs:ro
    healthcheck:
      test: ["CMD", "/ad-processor", "-health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ad-processing

volumes:
  postgres_data:
  redis_data:
  kafka_data:

networks:
  ad-processing:
    driver: bridge